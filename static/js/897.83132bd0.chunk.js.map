{"version":3,"file":"static/js/897.83132bd0.chunk.js","mappings":"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","sources":["pages/LogInPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { login } from 'redux/auth/authOperation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/auth/authSelectors';\nimport css from './RegistrationPage/Registration.module.css';\nimport sun from '../img/login/sun-min.png';\nimport forest from '../img/login/forest-min.png';\nimport cloud2 from '../img/login/cloud2-min.png';\nimport cloud1 from '../img/login/cloud1-min.png';\nimport balloon1 from '../img/login/balloon1-min.png';\nimport balloon2 from '../img/login/balloon2-min.png';\n\nexport default function LoginPage() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const loading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch(login({ email, password }));\n    navigate('/');\n  };\n\n  const [mousePos, setMousePos] = useState({});\n\n  const sunX = mousePos.x * 3;\n  const sunY = mousePos.y * 5;\n\n  const cloud1Y = mousePos.y * 5;\n\n  const cloud2X = mousePos.x * 20;\n  const cloud2Y = -mousePos.y * 5;\n\n  const balloon1X = -mousePos.x * 4;\n  const balloon1Y = -mousePos.y * 20;\n\n  const balloon2X = mousePos.x * 8;\n  const balloon2Y = mousePos.y * 30;\n\n  useEffect(() => {\n    const handleMouseMove = event => {\n      setMousePos({ x: event.clientX / 1000, y: event.clientY / 1000 });\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <div className={css.container__login}>\n            <div id={css['scene']}>\n              <div\n                className={css.layer}\n                style={{\n                  transform: `translate3d(${sunX}rem, ${sunY}rem, 0rem)`,\n                  willChange: 'transform',\n                }}\n              >\n                <img\n                  className={css.image}\n                  src={sun}\n                  alt=\"landscape\"\n                  height={'100%'}\n                />\n              </div>\n              <div className={css.layer}>\n                <img\n                  className={css.image}\n                  src={forest}\n                  alt=\"landscape\"\n                  height={'100%'}\n                />\n              </div>\n              <div\n                className={css.layer}\n                style={{\n                  transform: `translate3d(0rem, ${cloud1Y}rem, 0rem)`,\n                  willChange: 'transform',\n                }}\n              >\n                <img\n                  className={css.image}\n                  src={cloud1}\n                  alt=\"landscape\"\n                  height={'100%'}\n                />\n              </div>\n              <div\n                className={css.layer}\n                style={{\n                  transform: `translate3d(${cloud2X}rem, ${cloud2Y}rem, 0rem)`,\n                  willChange: 'transform',\n                }}\n              >\n                <img\n                  className={css.image}\n                  src={cloud2}\n                  alt=\"landscape\"\n                  height={'100%'}\n                />\n              </div>\n              <div\n                className={css.layer}\n                style={{\n                  transform: `translate3d(${balloon1X}rem, ${balloon1Y}rem, 0rem)`,\n                  willChange: 'transform',\n                }}\n              >\n                <img\n                  className={css.image}\n                  src={balloon1}\n                  alt=\"landscape\"\n                  height={'100%'}\n                />\n              </div>\n              <div\n                className={css.layer}\n                style={{\n                  transform: `translate3d(${balloon2X}rem, ${balloon2Y}rem, 0rem)`,\n                  willChange: 'transform',\n                }}\n              >\n                <img\n                  className={css.image}\n                  src={balloon2}\n                  alt=\"landscape\"\n                  height={'100%'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className={css.box__register}>\n            <div className={css.register}>\n              <h2>Log in</h2>\n              <form\n                className={css.register__form}\n                onSubmit={handleSubmit}\n                autoComplete=\"off\"\n              >\n                <div className={css.register__inputbox}>\n                  <input\n                    className={css.login__input}\n                    type=\"text\"\n                    name=\"email\"\n                    value={email}\n                    required\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                  <label className={css.register__label}> E-mail</label>\n                </div>\n                <div className={css.register__inputbox}>\n                  <input\n                    className={css.login__input}\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    required\n                    onChange={e => setPassword(e.target.value)}\n                  />\n                  <label className={css.register__label}> Password </label>\n                </div>\n\n                <button className={css.login__button} type=\"submit\">\n                  Log in\n                </button>\n                <p className={css.register__link}>\n                  Have not an account?{' '}\n                  <Link\n                    to={'/register'}\n                    style={{ color: '#660c39', fontWeight: '700' }}\n                  >\n                    Create account\n                  </Link>\n                </p>\n              </form>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["LoginPage","navigate","useNavigate","useState","email","setEmail","password","setPassword","loading","useSelector","selectLoading","dispatch","useDispatch","handleSubmit","e","preventDefault","login","mousePos","setMousePos","sunX","x","sunY","y","cloud1Y","cloud2X","cloud2Y","balloon1X","balloon1Y","balloon2X","balloon2Y","useEffect","handleMouseMove","event","clientX","clientY","window","addEventListener","removeEventListener","className","css","id","style","transform","willChange","src","sun","alt","height","forest","cloud1","cloud2","balloon1","balloon2","onSubmit","autoComplete","type","name","value","required","onChange","target","to","color","fontWeight"],"sourceRoot":""}